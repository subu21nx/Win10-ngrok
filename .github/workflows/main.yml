name: Ubuntu VPS with Ngrok

on:
  workflow_dispatch: # Trigger manually from GitHub Actions UI

jobs:
  setup-vps:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y openssh-server wget

    - name: Set up SSH server for root
      run: |
        echo "PermitRootLogin yes" | sudo tee -a /etc/ssh/sshd_config
        echo "PasswordAuthentication yes" | sudo tee -a /etc/ssh/sshd_config
        sudo systemctl restart sshd
        echo -e "Passxi23\nPassxi23" | sudo passwd root
        echo "Root user password has been set."

    - name: Download Ngrok
      run: |
        wget https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-stable-linux-amd64.zip
        unzip ngrok-stable-linux-amd64.zip
        sudo mv ngrok /usr/local/bin/
      
    - name: Authenticate Ngrok
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
      run: |
        ngrok authtoken $NGROK_AUTH_TOKEN

    - name: Start Ngrok for SSH
      run: |
        ngrok tcp 22 > ngrok-log.txt &
        sleep 10 # Allow Ngrok to initialize
        cat ngrok-log.txt

    - name: Get Ngrok public address
      run: |
        NGROK_URL=$(curl -s localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url')
        echo "Your Ngrok SSH URL is: $NGROK_URL"
        echo $NGROK_URL > ngrok_ssh_url.txt
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Upload Ngrok URL as an artifact
      uses: actions/upload-artifact@v3
      with:
        name: ngrok-ssh-url
        path: ngrok_ssh_url.txt
